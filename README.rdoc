== Installation
1. Install dependencies
       bundle install
2. Start server
       rails server

== POC Idea

My idea was to prepare mechanism that is able to version Locomotive documents. Then you could be able to serve:
- published versions of documents for application clients
- current versions of documents for content administrators (preview mode)

== POC Changes made

Locomotive content entry was extended with the following modules:
- Mongoid::History::Trackable - it allows to track changes within document fields.
- Mongoid::History::SoftUndo - it allows to undo changes without saving entry (undo! from mongoid-history saves document after undoing changes)
- Mongoid::History::Publishable - it allows to publish and get published version of the document
       
== POC Result
I have created a new content type "Post" with the "title:string" field.

Then I started rails console and typed following commands:
 post_type = Locomotive::ContentType.first
  => #<Locomotive::ContentType _id: 52ecc51d6c249cb41b000009, ... > 
 post = post_type.entries.create!(title: "My First Post")
  => #<Locomotive::ContentEntry52ecc51d6c249cb41b000009 _id: 52ecd4696c249c87db000001, ... > 
 post.publish!
  => true 
 post.title
  => "My First Post" 
 post.published.title
  => "My First Post" 
 post.history_tracks.count
  => 0

 post.update_attributes!(title: "Modified title")
  => true 
 post.title
  => "Modified title" # new title
 post.published.title
  => "My First Post" # old title, since new title has not been published yet
 post.history_tacks.count
  => 1 # there is 1 change
  
It works as expected, but let's see what happens when we uncomment Mongoid and Moped debug in config/initializers/my-libs.rb
and do the same thing for collection of posts.
First create two more posts and then execute following commands in rails console:
  
 post_type = Locomotive::ContentType.first
  MOPED: 127.0.0.1:27017 QUERY        database=locomotive_dev collection=locomotive_content_types selector={"$query"=>{}, "$orderby"=>{:_id=>1}} flags=[:slave_ok] limit=-1 skip=0 batch_size=nil fields=nil (1.0242ms)
  => #<Locomotive::ContentType _id: 52ecc51d6c249cb41b000009, ... > 
 post_type.entries.map { |p| p.published.title }
  MOPED: 127.0.0.1:27017 QUERY        database=locomotive_dev collection=locomotive_content_entries selector={"content_type_id"=>"52ecc51d6c249cb41b000009"} flags=[:slave_ok] limit=0 skip=0 batch_size=nil fields=nil (1.7195ms)
  MOPED: 127.0.0.1:27017 QUERY        database=locomotive_dev collection=history_trackers selector={"$query"=>{"scope"=>"locomotive_content_entry", "association_chain"=>{"name"=>"Locomotive::ContentEntry52ecc51d6c249cb41b000009", "id"=>"52ecd4696c249c87db000001"}, "version"=>{"$in"=>[0]}}, "$orderby"=>{"version"=>-1}} flags=[:slave_ok] limit=0 skip=0 batch_size=nil fields=nil (0.8221ms)
  MOPED: 127.0.0.1:27017 QUERY        database=locomotive_dev collection=history_trackers selector={"$query"=>{"scope"=>"locomotive_content_entry", "association_chain"=>{"name"=>"Locomotive::ContentEntry52ecc51d6c249cb41b000009", "id"=>"52ecd4cc6c249c87db000003"}, "version"=>{"$in"=>[0]}}, "$orderby"=>{"version"=>-1}} flags=[:slave_ok] limit=0 skip=0 batch_size=nil fields=nil (0.4876ms)
  MOPED: 127.0.0.1:27017 QUERY        database=locomotive_dev collection=history_trackers selector={"$query"=>{"scope"=>"locomotive_content_entry", "association_chain"=>{"name"=>"Locomotive::ContentEntry52ecc51d6c249cb41b000009", "id"=>"52ecd4e06c249c87db000004"}, "version"=>{"$in"=>[0]}}, "$orderby"=>{"version"=>-1}} flags=[:slave_ok] limit=0 skip=0 batch_size=nil fields=nil (0.4501ms)
  => ["Modified title", "My Second Post", "My Third Post"]

As you can see there is one query for locomotive_content_entries collection and for each content entry there is one query to history_trackers collection.
This causes 1+n query problem.

Another problem with this POC is that mongoid-history is able to track changes within document and embedded documents. Unforunately Locomotive uses relations based on foreign keys, so you will have to manually take care of reverting changes in related documents.
